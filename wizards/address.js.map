{"version":3,"file":"address.js","sources":["../../../wizards/address.ts"],"sourcesContent":["import { html, TemplateResult } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { EditV2 } from '@omicronenergy/oscd-api';\n\nimport { getReference } from '@openenergytools/scl-lib';\n\nimport { typePattern } from './patterns.js';\n\nimport { createElement, typeNullable } from '../foundation.js';\n\ninterface AddressContentOptions {\n  element: Element;\n  types: string[];\n}\n\nfunction getPElement(parent: Element, type: string | null): Element | null {\n  return (\n    Array.from(parent.querySelectorAll(':scope > Address > P')).find(\n      p => p.getAttribute('type') === type,\n    ) ?? null\n  );\n}\n\nexport function existDiff(oldAddr: Element, newAddr: Element): boolean {\n  return Array.from(oldAddr.querySelectorAll('P')).some(\n    pType =>\n      getPElement(newAddr, pType.getAttribute('type'))?.textContent !==\n      pType.textContent,\n  );\n}\n\nexport function createAddressElement(\n  parent: Element,\n  inputs: Record<string, string | null>,\n  instType: boolean,\n): Element {\n  const address = createElement(parent.ownerDocument, 'Address', {});\n\n  Object.entries(inputs)\n\n    .filter(([_, value]) => value !== null)\n    .forEach(([key, value]) => {\n      const type = key;\n      const child = createElement(parent.ownerDocument, 'P', { type });\n      if (instType) {\n        child.setAttributeNS(\n          'http://www.w3.org/2001/XMLSchema-instance',\n          'xsi:type',\n          `tP_${key}`,\n        );\n      }\n      child.textContent = value;\n      address.appendChild(child);\n    });\n\n  return address;\n}\n\nexport function updateAddress(\n  parent: Element,\n  inputs: Record<string, string | null>,\n  instType: boolean,\n): EditV2[] {\n  const actions: EditV2[] = [];\n\n  const newAddress = createAddressElement(parent, inputs, instType);\n  const oldAddress = parent.querySelector('Address');\n\n  if (oldAddress !== null && existDiff(oldAddress, newAddress)) {\n    actions.push({\n      node: oldAddress,\n    });\n    actions.push({\n      parent,\n      node: newAddress,\n      reference: oldAddress.nextSibling,\n    });\n  } else if (oldAddress === null) {\n    actions.push({\n      parent,\n      node: newAddress,\n      reference: getReference(parent, 'Address'),\n    });\n  }\n\n  return actions;\n}\n\nexport function hasTypeRestriction(element: Element): boolean {\n  return Array.from(element.querySelectorAll('Address > P')).some(pType =>\n    pType.getAttribute('xsi:type'),\n  );\n}\n\nexport function contentAddress(\n  content: AddressContentOptions,\n): TemplateResult[] {\n  const pChildren: Record<string, string | null> = {};\n\n  content.types.forEach(type => {\n    if (!pChildren[type]) {\n      pChildren[type] =\n        getPElement(content.element, type)?.textContent?.trim() ?? null;\n    }\n  });\n\n  return [\n    html`<scl-checkbox\n      label=\"Add XMLSchema-instance type\"\n      id=\"instType\"\n      .value=\"${hasTypeRestriction(content.element) ? 'true' : 'false'}\"\n    ></scl-checkbox>`,\n    html`${Object.entries(pChildren).map(\n      ([key, value]) =>\n        html`<scl-text-field\n          label=\"${key}\"\n          ?nullable=${typeNullable[key]}\n          .value=${value}\n          pattern=\"${ifDefined(typePattern[key])}\"\n          required\n        ></scl-text-field>`,\n    )}`,\n  ];\n}\n"],"names":["html","ifDefined"],"mappings":"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"}