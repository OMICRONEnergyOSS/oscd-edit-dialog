{"version":3,"file":"connectedap.js","sources":["../../../wizards/connectedap.ts"],"sourcesContent":["import { html } from 'lit';\n\nimport { EditV2 } from '@omicronenergy/oscd-api';\n\nimport {\n  SelectionList,\n  SelectItem,\n} from '@openenergytools/filterable-lists/dist/SelectionList.js';\nimport { SclCheckbox } from '@openenergytools/scl-checkbox';\n\nimport {\n  appIdGenerator,\n  getReference,\n  identity,\n  macAddressGenerator,\n} from '@openenergytools/scl-lib';\n\nimport {\n  compareNames,\n  createElement,\n  getTypes,\n  getValue,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n} from '../foundation.js';\n\nimport { contentAddress, updateAddress } from './address.js';\n\ninterface AccessPointDescription {\n  element: Element;\n  connected?: boolean;\n}\n\nfunction initSMVElements(\n  doc: XMLDocument,\n  connectedAp: Element,\n  options: {\n    macGeneratorSmv: () => string | null;\n    appidGeneratorSmv: () => string | null;\n    unconnectedSampledValueControl: Set<string>;\n  },\n): EditV2[] {\n  const actions: EditV2[] = [];\n\n  const ied = doc.querySelector(\n    `IED[name=\"${connectedAp.getAttribute('iedName')}\"]`,\n  );\n\n  Array.from(ied?.querySelectorAll('SampledValueControl') ?? [])\n    .filter(sampledValueControl => {\n      const id = identity(sampledValueControl) as string;\n\n      if (options.unconnectedSampledValueControl.has(id)) {\n        options.unconnectedSampledValueControl.delete(id);\n        return true;\n      }\n\n      return false;\n    })\n    .forEach(sampledValueControl => {\n      const cbName = sampledValueControl.getAttribute('name');\n      const ldInst =\n        sampledValueControl.closest('LDevice')?.getAttribute('inst') ?? null;\n\n      const sMV = createElement(connectedAp.ownerDocument, 'SMV', {\n        cbName,\n        ldInst,\n      });\n      actions.push({\n        parent: connectedAp,\n        node: sMV,\n        reference: getReference(connectedAp, 'SMV'),\n      });\n\n      const address = createElement(connectedAp.ownerDocument, 'Address', {});\n      actions.push({\n        parent: sMV,\n        node: address,\n        reference: getReference(sMV, 'Address'),\n      });\n\n      const pMac = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'MAC-Address',\n      });\n      pMac.textContent = options.macGeneratorSmv();\n      actions.push({\n        parent: address,\n        node: pMac,\n        reference: getReference(address, 'P'),\n      });\n\n      const pAppId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'APPID',\n      });\n      pAppId.textContent = options.appidGeneratorSmv();\n      actions.push({\n        parent: address,\n        node: pAppId,\n        reference: getReference(address, 'P'),\n      });\n\n      const pVlanId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-ID',\n      });\n      pVlanId.textContent = '000';\n      actions.push({\n        parent: address,\n        node: pVlanId,\n        reference: getReference(address, 'P'),\n      });\n\n      const pVlanPrio = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-PRIORITY',\n      });\n      pVlanPrio.textContent = '4';\n      actions.push({\n        parent: address,\n        node: pVlanPrio,\n        reference: getReference(address, 'P'),\n      });\n    });\n\n  return actions;\n}\n\nfunction initGSeElements(\n  doc: XMLDocument,\n  connectedAp: Element,\n  options: {\n    macGeneratorGse: () => string | null;\n    appidGeneratorGse: () => string | null;\n    unconnectedGseControl: Set<string>;\n  },\n): EditV2[] {\n  const actions: EditV2[] = [];\n\n  const ied = doc.querySelector(\n    `IED[name=\"${connectedAp.getAttribute('iedName')}\"]`,\n  );\n\n  Array.from(ied?.querySelectorAll('GSEControl') ?? [])\n    .filter(gseControl => {\n      const id = identity(gseControl) as string;\n\n      if (options.unconnectedGseControl.has(id)) {\n        options.unconnectedGseControl.delete(id);\n        return true;\n      }\n\n      return false;\n    })\n    .forEach(gseControl => {\n      const cbName = gseControl.getAttribute('name');\n      const ldInst =\n        gseControl.closest('LDevice')?.getAttribute('inst') ?? null;\n\n      const gSE = createElement(connectedAp.ownerDocument, 'GSE', {\n        cbName,\n        ldInst,\n      });\n      actions.push({\n        parent: connectedAp,\n        node: gSE,\n        reference: getReference(connectedAp, 'GSE'),\n      });\n\n      const address = createElement(connectedAp.ownerDocument, 'Address', {});\n      actions.push({\n        parent: gSE,\n        node: address,\n        reference: getReference(gSE, 'Address'),\n      });\n\n      const pMac = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'MAC-Address',\n      });\n      pMac.textContent = options.macGeneratorGse();\n      actions.push({\n        parent: address,\n        node: pMac,\n        reference: getReference(address, 'P'),\n      });\n\n      const pAppId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'APPID',\n      });\n      pAppId.textContent = options.appidGeneratorGse();\n      actions.push({\n        parent: address,\n        node: pAppId,\n        reference: getReference(address, 'P'),\n      });\n\n      const pVlanId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-ID',\n      });\n      pVlanId.textContent = '000';\n      actions.push({\n        parent: address,\n        node: pVlanId,\n        reference: getReference(address, 'P'),\n      });\n\n      const pVlanPrio = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-PRIORITY',\n      });\n      pVlanPrio.textContent = '4';\n      actions.push({\n        parent: address,\n        node: pVlanPrio,\n        reference: getReference(address, 'P'),\n      });\n\n      const minTime = createElement(connectedAp.ownerDocument, 'MinTime', {\n        unit: 's',\n        multiplier: 'm',\n      });\n      minTime.textContent = '10';\n      actions.push({\n        parent: gSE,\n        node: minTime,\n        reference: getReference(gSE, 'MinTime'),\n      });\n\n      const maxTime = createElement(connectedAp.ownerDocument, 'MaxTime', {\n        unit: 's',\n        multiplier: 'm',\n      });\n      maxTime.textContent = '10000';\n      actions.push({\n        parent: gSE,\n        node: maxTime,\n        reference: getReference(gSE, 'MaxTime'),\n      });\n    });\n\n  return actions;\n}\n\nfunction unconnectedGseControls(doc: XMLDocument): Set<string> {\n  const allGseControl = Array.from(doc.querySelectorAll('GSEControl'));\n\n  const unconnectedGseControl = allGseControl\n    .filter(gseControl => {\n      const iedName = gseControl.closest('IED')?.getAttribute('name');\n      const ldInst = gseControl.closest('LDevice')?.getAttribute('inst');\n      const cbName = gseControl.getAttribute('name');\n\n      return !doc.querySelector(\n        `ConnectedAP[iedName=\"${iedName}\"] ` +\n          `> GSE[ldInst=\"${ldInst}\"][cbName=\"${cbName}\"]`,\n      );\n    })\n    .map(gseControl => identity(gseControl) as string);\n\n  const mySet = new Set(unconnectedGseControl);\n  return mySet;\n}\n\nfunction unconnectedSampledValueControls(doc: XMLDocument): Set<string> {\n  const allSmvControl = Array.from(doc.querySelectorAll('SampledValueControl'));\n\n  const unconnectedSmvControl = allSmvControl\n    .filter(gseControl => {\n      const iedName = gseControl.closest('IED')?.getAttribute('name');\n      const ldInst = gseControl.closest('LDevice')?.getAttribute('inst');\n      const cbName = gseControl.getAttribute('name');\n\n      return !doc.querySelector(\n        `ConnectedAP[iedName=\"${iedName}\"] ` +\n          `> SMV[ldInst=\"${ldInst}\"][cbName=\"${cbName}\"]`,\n      );\n    })\n    .map(gseControl => identity(gseControl) as string);\n\n  const mySet = new Set(unconnectedSmvControl);\n  return mySet;\n}\n\nfunction createConnectedApAction(parent: Element): WizardActor {\n  return (_: WizardInputElement[], wizard: Element): EditV2[] => {\n    const doc = parent.ownerDocument;\n\n    // generators ensure unique MAC-Address and APPID across the project\n    const macGeneratorSmv = macAddressGenerator(doc, 'SMV');\n    const appidGeneratorSmv = appIdGenerator(doc, 'SMV');\n    const macGeneratorGse = macAddressGenerator(doc, 'GSE');\n    const appidGeneratorGse = appIdGenerator(doc, 'GSE');\n\n    // track GSE and SMV for multiselect access points connection\n    const unconnectedGseControl = unconnectedGseControls(doc);\n    const unconnectedSampledValueControl = unconnectedSampledValueControls(doc);\n\n    const list = wizard.querySelector('#apList') as SelectionList;\n    if (!list) {\n      return [];\n    }\n\n    const actions = list.selectedElements.map(accP => {\n      const id = `${identity(accP)}`;\n      const [iedName, apName] = id.split('>');\n      const connAPactions: EditV2[] = [];\n\n      const connectedAp = createElement(parent.ownerDocument, 'ConnectedAP', {\n        iedName,\n        apName,\n      });\n      connAPactions.push({\n        parent,\n        node: connectedAp,\n        reference: getReference(parent, 'ConnectedAP'),\n      });\n      connAPactions.push(\n        ...initSMVElements(doc, connectedAp, {\n          macGeneratorSmv,\n          appidGeneratorSmv,\n          unconnectedSampledValueControl,\n        }),\n      );\n      connAPactions.push(\n        ...initGSeElements(doc, connectedAp, {\n          macGeneratorGse,\n          appidGeneratorGse,\n          unconnectedGseControl,\n        }),\n      );\n\n      return connAPactions;\n    });\n\n    return actions;\n  };\n}\n\n/** Sorts connected `AccessPoint`s to the bottom. */\nfunction compareAccessPointConnection(\n  a: AccessPointDescription,\n  b: AccessPointDescription,\n): number {\n  if (a.connected !== b.connected) {\n    return b.connected ? -1 : 1;\n  }\n  return 0;\n}\n\nfunction existConnectedAp(accessPoint: Element): boolean {\n  const iedName = accessPoint.closest('IED')?.getAttribute('name');\n  const apName = accessPoint.getAttribute('name');\n\n  const connAp = accessPoint.ownerDocument.querySelector(\n    `ConnectedAP[iedName=\"${iedName}\"][apName=\"${apName}\"]`,\n  );\n\n  return !!connAp;\n}\n\n/** @returns single page  [[`Wizard`]] for creating SCL element ConnectedAP. */\nexport function createConnectedApWizard(element: Element): Wizard {\n  const doc = element.ownerDocument;\n\n  const accessPoints = Array.from(doc.querySelectorAll(':root > IED'))\n    .sort(compareNames)\n    .flatMap(ied =>\n      Array.from(ied.querySelectorAll(':root > IED > AccessPoint')),\n    )\n    .map(accesspoint => ({\n      element: accesspoint,\n      connected: existConnectedAp(accesspoint),\n    }))\n    .sort(compareAccessPointConnection);\n\n  const items: SelectItem[] = accessPoints.map(appP => ({\n    headline: `${identity(appP.element)}`,\n    supportingText: appP.connected ? 'AccessPoint already connected!' : '',\n    selected: !appP.connected,\n    disabled: appP.connected,\n    attachedElement: appP.element,\n  }));\n\n  return {\n    title: 'Add ConnectedAP',\n    primary: {\n      icon: 'save',\n      label: 'save',\n      action: createConnectedApAction(element),\n    },\n    content: [\n      html`<selection-list\n        id=\"apList\"\n        multi\n        .items=${items}\n        filterable\n      ></selection-list>`,\n    ],\n  };\n}\n\nfunction updateAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[], wizard: Element): EditV2[] => {\n    const instType: boolean =\n      (wizard.querySelector('#instType') as SclCheckbox).value === 'true';\n\n    const addressContent: Record<string, string | null> = {};\n    inputs.forEach(input => {\n      const key = input.label;\n      const value = getValue(input);\n      addressContent[key] = value;\n    });\n\n    return updateAddress(element, addressContent, instType);\n  };\n}\n\n/** @returns single page [[`Wizard`]] to edit SCL element ConnectedAP. */\nexport function editConnectedApWizard(element: Element): Wizard {\n  return {\n    title: 'Edit ConnectedAP',\n    primary: {\n      icon: 'save',\n      label: 'save',\n      action: updateAction(element),\n    },\n    content: [...contentAddress({ element, types: getTypes(element) })],\n  };\n}\n"],"names":["html"],"mappings":"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"}