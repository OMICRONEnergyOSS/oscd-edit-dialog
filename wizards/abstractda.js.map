{"version":3,"file":"abstractda.js","sources":["../../../wizards/abstractda.ts"],"sourcesContent":["import { html, TemplateResult } from 'lit';\n\nimport { MdFilledSelect } from '@scopedelement/material-web/select/MdFilledSelect.js';\nimport { MdSelectOption } from '@scopedelement/material-web/select/MdSelectOption.js';\n\nimport { EditV2 } from '@omicronenergy/oscd-api';\n\nimport { SclSelect } from '@openenergytools/scl-select';\nimport { SclTextField } from '@openenergytools/scl-text-field';\n\nimport { getReference } from '@openenergytools/scl-lib';\n\nimport { createElement } from '../foundation.js';\n\nimport {\n  maxLength,\n  patterns,\n  predefinedBasicTypeEnum,\n  valKindEnum,\n} from './patterns.js';\n\nfunction setSelValue(\n  typeInput: MdFilledSelect,\n  data: Element,\n  Val: string | null,\n): void {\n  const typeValue = typeInput.value;\n\n  const selValInput = typeInput.parentElement!.querySelector(\n    'scl-select[label=\"Val\"]',\n  ) as SclSelect;\n\n  // If enum make sure to load select Val\n  const enumVals = Array.from(\n    data.querySelectorAll(`EnumType[id=\"${typeValue}\"] > EnumVal`),\n  ).map(enumval => enumval.textContent?.trim() ?? '');\n  selValInput.selectOptions = enumVals;\n  selValInput.value = Val;\n\n  selValInput.requestUpdate();\n}\n\nfunction changeType(e: Event, data: Element, Val: string | null): void {\n  if (!e.target || !(e.target as SclSelect).parentElement) {\n    return;\n  }\n\n  // Query all needed inputs\n  const typeInput = e.target as MdFilledSelect;\n  const bTypeInput = typeInput.parentElement!.querySelector(\n    'scl-select[label=\"bType\"]',\n  ) as SclSelect;\n\n  //TODO: declared but not used - figure out if it's needed and the implementation is incomplete, or just a copy paste oversight\n  // const selValInput = typeInput.parentElement!.querySelector(\n  //   'scl-select[label=\"Val\"]'\n  // ) as SclSelect;\n\n  // Get values\n  // const typeValue = typeInput.value;\n  const bTypeValue = bTypeInput.value;\n\n  if (bTypeValue !== 'Enum') {\n    return;\n  }\n\n  setSelValue(typeInput, data, Val);\n}\n\nfunction changeBType(\n  e: Event,\n  bType: string | null,\n  type: string | null,\n  data: Element,\n): void {\n  // Query all needed inputs\n  const bTypeInput = e.target as SclSelect;\n  const typeInput = bTypeInput.parentElement!.querySelector(\n    '*[label=\"type\"]',\n  ) as MdFilledSelect;\n  const selValInput = bTypeInput.parentElement!.querySelector(\n    'scl-select[label=\"Val\"]',\n  ) as SclSelect;\n  const textValInput = bTypeInput.parentElement!.querySelector(\n    'scl-text-field[label=\"Val\"]',\n  ) as SclTextField;\n\n  // Get necassary values\n  const bTypeValue = bTypeInput.value!;\n\n  // Disable/enable inputs based on bType\n  typeInput.disabled = !(bTypeValue === 'Enum' || bTypeValue === 'Struct');\n  if (typeInput.disabled) {\n    typeInput.value = '';\n  }\n\n  // Hide/show EnumType/DAType based on bType selection\n  const enabledItems: MdSelectOption[] = [];\n  Array.from(typeInput.children).forEach(child => {\n    const childItem = child as MdSelectOption;\n    childItem.disabled = !child.classList.contains(bTypeValue);\n    childItem.style.display = !child.classList.contains(bTypeValue)\n      ? 'none'\n      : '';\n    if (!childItem.disabled) {\n      enabledItems.push(childItem);\n    }\n  });\n\n  // Set the type input value to the first enabled item or empty if none\n  if (type && bType === bTypeValue) {\n    typeInput.value = type;\n  } else {\n    typeInput.value = enabledItems.length ? enabledItems[0].value : '';\n  }\n\n  // Hide/show Val input based on bType selection\n  if (bTypeValue === 'Enum') {\n    selValInput.style.display = '';\n  } else {\n    selValInput.style.display = 'none';\n  }\n  setSelValue(typeInput, data, null);\n\n  // Hide/show Val input based on bType selection\n  if (bTypeValue === 'Enum' || bTypeValue === 'Struct') {\n    textValInput.style.display = 'none';\n  } else {\n    textValInput.style.display = '';\n  }\n\n  // Update inputs\n  selValInput.requestUpdate();\n  textValInput.requestUpdate();\n  typeInput.requestUpdate();\n}\n\nfunction filterType(bType: string, tag: string): string {\n  if (bType === 'Enum' || tag === 'EnumType') {\n    return '';\n  }\n  if (bType === 'Struct' || tag === 'DAType') {\n    return '';\n  }\n  if (bType === 'Enum' || tag === 'DAType') {\n    return 'none';\n  }\n\n  return 'none';\n}\n\nexport function renderAbstractDataAttributeContent(\n  name: string | null,\n  desc: string | null,\n  bType: string,\n  types: Element[],\n  type: string | null,\n  sAddr: string | null,\n  valKind: string | null,\n  valImport: string | null,\n  Val: string | null,\n  data: Element,\n): TemplateResult[] {\n  return [\n    html`<scl-text-field\n      label=\"name\"\n      .value=${name}\n      required\n      pattern=\"${patterns.abstractDataAttributeName}\"\n      maxLength=\"${maxLength.abstracDaName}\"\n    ></scl-text-field>`,\n    html`<scl-text-field\n      label=\"desc\"\n      .value=${desc}\n      nullable\n      pattern=\"${patterns.normalizedString}\"\n    ></scl-text-field>`,\n    html`<scl-select\n      label=\"bType\"\n      .selectOptions=${predefinedBasicTypeEnum}\n      .value=${bType}\n      required\n      @input=${(e: Event) => changeBType(e, bType, type, data)}\n    ></scl-select>`,\n    html`<md-filled-select\n      label=\"type\"\n      .value=${type}\n      .disabled=${bType !== 'Enum' && bType !== 'Struct'}\n      @change=${(e: Event) => changeType(e, data, Val)}\n      >${types.map(\n        dataType =>\n          html`<md-select-option\n            class=\"${dataType.tagName === 'EnumType' ? 'Enum' : 'Struct'}\"\n            style=\"display: ${filterType(bType, dataType.tagName)}\"\n            value=${dataType.id}\n            >${dataType.id}</md-select-option\n          >`,\n      )}</md-filled-select\n    >`,\n    html`<scl-text-field\n      label=\"sAddr\"\n      .value=${sAddr}\n      nullable\n      pattern=\"${patterns.normalizedString}\"\n    ></scl-text-field>`,\n    html`<scl-select\n      label=\"valKind\"\n      .selectOptions=${valKindEnum}\n      .value=${valKind}\n      nullable\n      required\n    ></scl-select>`,\n    html`<scl-checkbox\n      label=\"valImport\"\n      .value=${valImport}\n      nullable\n      required\n    ></scl-checkbox>`,\n    html`<scl-select\n      label=\"Val\"\n      .selectOptions=${Array.from(\n        data.querySelectorAll(\n          `:root > DataTypeTemplates > EnumType > EnumVal[id=\"${type}\"]`,\n        ),\n      ).map(enumVal => enumVal.textContent?.trim() ?? '')}\n      .value=${Val}\n      nullable\n      style=\"display: ${bType === 'Enum' ? '' : 'none'}\"\n    ></scl-select>`,\n    html`<scl-text-field\n      label=\"Val\"\n      .value=${Val}\n      nullable\n      style=\"display: ${bType === 'Enum' || bType === 'Struct' ? 'none' : ''}\"\n    ></scl-text-field>`,\n  ];\n}\n\nexport function getValAction(\n  oldVal: Element | null,\n  Val: string | null,\n  abstractda: Element,\n): EditV2[] {\n  if (oldVal === null) {\n    const element = createElement(abstractda.ownerDocument, 'Val', {});\n    element.textContent = Val;\n    return [\n      {\n        parent: abstractda,\n        node: element,\n        reference: getReference(abstractda, 'Val'),\n      },\n    ];\n  }\n\n  if (Val === null) {\n    return [{ node: oldVal }];\n  }\n\n  const newVal = <Element>oldVal.cloneNode(false);\n  newVal.textContent = Val;\n  return [\n    {\n      parent: oldVal.parentElement!,\n      node: newVal,\n      reference: getReference(oldVal.parentElement!, 'Val'),\n    },\n    { node: oldVal },\n  ];\n}\n"],"names":["html"],"mappings":"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"}